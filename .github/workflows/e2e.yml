name: e2e
on:
  push:
    branches: [main]
  pull_request:
    paths-ignore:
      - '**/*.md'
permissions:
  contents: read
jobs:
  golangci:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-go@v4
        with:
          go-version: "1.20"
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3.6.0
        with:
          version: v1.53.2
          args: --timeout 5m
          working-directory: e2e/interchaintest
  build:
    strategy:
      matrix:
        test:
          - TestIcaContractChannelHandshake
          - TestIcaRelayerInstantiatedChannelHandshake
          - TestRecoveredIcaContractInstantiatedChannelHandshake
          - TestIcaContractExecutionProto3JsonEncoding
          - TestIcaContractExecutionProtobufEncoding
          - TestIcaContractTimeoutPacket
          - TestOwnerCreateIcaContract
          - TestOwnerPredefinedAction
          - TestSendCosmosMsgsProto3JsonEncoding
          - TestSendCosmosMsgsProtobufEncoding
          - TestSendWasmMsgsProtobufEncoding
    name: ${{ matrix.test }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Build Owner Contract with Docker
        run: |
          docker run --rm -v "$(pwd)":/code \
            --mount type=volume,source="devcontract_cache_burner",target=/code/contracts/burner/target \
            --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
            cosmwasm/optimizer:0.15.0 ./testing/contracts/cw-ica-owner
      - name: Build Callback Contract with Docker
        run: |
          docker run --rm -v "$(pwd)":/code \
            --mount type=volume,source="devcontract_cache_burner",target=/code/contracts/burner/target \
            --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \
            cosmwasm/optimizer:0.15.0 ./testing/contracts/callback-counter
      - name: Install cargo-run-script
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-run-script
      - name: Build Optimized Contract
        uses: actions-rs/cargo@v1
        with:
          command: run-script
          args: optimize
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"
          check-latest: true
          cache-dependency-path: |
             e2e/interchaintest/go.sum
      - name: TestContract
        run: |
          cd e2e/interchaintest
          if [[ ${{ matrix.test }} == TestOwner* ]]; then
            go test -v . -run TestWithOwnerTestSuite -testify.m ${{ matrix.test }}
          else
            go test -v . -run TestWithContractTestSuite -testify.m ${{ matrix.test }}
          fi
